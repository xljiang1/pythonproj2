This section is work in progress and will capture more use cases as we learn.In general you can follow these steps to troubleshoot 5xx errors.If the errors are for a response to calls to a specifc Service, best place to start is the Service Realtime analytics page on the Developer Portal.Check to see if the Service ALB is reporting either ELB 5xx or Target 5xxELB 5xx means the ALB could not call the service, got no response or is not available.Check Kubernetes section and or contact Service team or MsaaS supportTarget 5xx means the errors are coming from the ServiceCheck with the Service teamIf the errors are for an alert or pager duty, you can use one of these to narrow down the possible cause.Check the wavefront GW troubleshooting dashboardSelect the variables to narrow down as you find out more and pinpoint the source of errors by going down the stackUse Gateway Splunk (prd, e2e) to add a unique key or string to the query to find one of the transactions and parse the logs to determine the cause (see below)gw_gen = F means the error came from the call to the service - Check Service Real time analytics pagegw_gen=T & gwErrorType=S - same as abovegw_gen=T & gwErrorType=G (or U) - either a call to identity is failing or there is a gateway issue500GW log fieldsAny reason='oAuth2Server' Orgw_gen=Tmessage= 'Failed to call OAuth due to Server Exception 'reason= 'oAuth2Server'value= 'OAuth2 Server returned status code: 503'Check realtime analytics page for oauth2 service504This is usually a timeout for Gateway calling the service and could be due toGateway NAT issues (dropped requests) - least likelyService slow and not responding in time - less likelyService ALB issues or Service infrastructure issues causing delay in request processing and gateway times out - likelyRequest from client is large or slow causing big delay in receipt of the payload (this is included in svcTime) - possibleGW log fieldsgw_gen=FsvcError={error} e.g. java.util.concurrent.TimeoutException Idle timeout expired: 345000/345000 msOrgw_gen=Tphrase=Code:GatewayTimeout OR phrase=Socket read timeoutgwErrorType=SsvcError={error} e.g. java.util.concurrent.TimeoutException Idle timeout 37000 msCheck the Idle timeout time - it's usually the defined timeout in the Service YamlMay need to be increased - not likelySome delay in processing the request (duh) - check Service ALB logs (using x-amzn-trace-id from GW logs) for clues